"""
Script de ejemplo mostrando c√≥mo usar el nuevo sistema de scraping modular.

Este script permite:
1. Consulta por mes espec√≠fico (Month mode)
2. Consulta por a√±o completo (Year mode) 
3. Consulta por periodo de a√±os (Period mode)

Cada modo permite guardar archivos individuales o consolidados.
"""

import asyncio
from main import main

def show_usage_examples():
    """Muestra ejemplos de uso del sistema"""
    print("üîç EJEMPLOS DE USO DEL SISTEMA DE SCRAPING")
    print("=" * 60)
    print("üîç INGRESE EL C√ìDIGO DE LA ESTACI√ìN:")
    print("   - Puedes encontrar los c√≥digos en el archivo 'data/estaciones.json'")
    print("C√≥digo (ejemplo: 472D30C8): 472D30C8")

    print("üìÖ MODO MONTH (Mes espec√≠fico):")
    print("   - Descarga datos de un a√±o y mes espec√≠fico")
    print("   - Ejemplo: 2024, mes 09 ‚Üí TICAPAMPA-202409.csv")
    print()
    
    print("üìÖ MODO YEAR (A√±o completo):")
    print("   - Descarga todos los meses de un a√±o")
    print("   - Opci√≥n de archivos individuales o consolidado")
    print("   - Ejemplo: 2024 ‚Üí 12 archivos individuales o TICAPAMPA-2024.csv")
    print()
    
    print("üìÖ MODO PERIOD (Periodo de a√±os):")
    print("   - Descarga datos de m√∫ltiples a√±os")
    print("   - Opci√≥n de archivos individuales o consolidado")
    print("   - Ejemplo: 2020-2025 ‚Üí m√∫ltiples archivos o TICAPAMPA-2020-2025.csv")
    print()
    
    print("üíæ OPCIONES DE GUARDADO:")
    print("   - Individual: Un archivo CSV por cada mes")
    print("   - Consolidado: Todos los datos en un solo archivo con columna de periodo")
    print()
    
    print("üìÅ ESTRUCTURA DE ARCHIVOS GENERADOS:")
    print("   output/")
    print("   ‚îú‚îÄ‚îÄ TICAPAMPA-202409.csv       (modo month)")
    print("   ‚îú‚îÄ‚îÄ TICAPAMPA-2024.csv         (modo year consolidado)")
    print("   ‚îú‚îÄ‚îÄ TICAPAMPA-2020-2025.csv    (modo period consolidado)")
    print("   ‚îî‚îÄ‚îÄ TICAPAMPA-202401.csv       (archivos individuales)")
    print("       TICAPAMPA-202402.csv")
    print("       ...")
    print()

def run_interactive_example():
    """Ejecuta el sistema de manera interactiva"""
    show_usage_examples()
    
    print("üöÄ INICIANDO SCRAPER INTERACTIVO")
    print("=" * 60)
    
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è  Operaci√≥n cancelada por el usuario")
    except Exception as e:
        print(f"\n‚ùå Error durante la ejecuci√≥n: {e}")

if __name__ == "__main__":
    run_interactive_example()